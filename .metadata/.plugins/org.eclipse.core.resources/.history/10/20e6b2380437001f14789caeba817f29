#include "buzzer.h"

uint32_t GetTimerClockFrequency(TIM_HandleTypeDef *htim) {
    if (htim->Instance == TIM1 || htim->Instance == TIM8) {
    if (htim->Instance == TIM1 {
        return HAL_RCC_GetPCLK2Freq();
    } else {
        return HAL_RCC_GetPCLK1Freq();
    }
}

void Buzzer_Init(BuzzerTypeDef *buzzer) {
    Buzzer_SetFrequency(buzzer, buzzer->frequency);
    Buzzer_SetVolume(buzzer, buzzer->volume);
    HAL_TIM_PWM_Start(buzzer->htim, buzzer->channel);
}

void Buzzer_SetFrequency(BuzzerTypeDef *buzzer, uint32_t frequency) {
    buzzer->frequency = frequency;
    uint32_t timer_clock = GetTimerClockFrequency(buzzer->htim);
    uint32_t prescaler = (timer_clock / (frequency * 1000)) - 1;
    __HAL_TIM_SET_PRESCALER(buzzer->htim, prescaler);
}

void Buzzer_SetVolume(BuzzerTypeDef *buzzer, uint8_t volume) {
    buzzer->volume = volume;
    uint32_t period = 1000 - 1; // 1ms period (1000 Hz)
    uint32_t compare_value = (period + 1) * volume / 100;
    __HAL_TIM_SET_COMPARE(buzzer->htim, buzzer->channel, compare_value);
}
