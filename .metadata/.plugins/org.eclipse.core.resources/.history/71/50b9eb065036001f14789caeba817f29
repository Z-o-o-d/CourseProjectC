#include "AT_WIFI.h"

// Default UART handle
UART_HandleTypeDef *AT_huart;

void ESP_SendCommand(uint8_t *command) {
    // Transmit the command using the default UART
    HAL_UART_Transmit(AT_huart, command, strlen((char*)command), 1000);
}

void ESP_SendTCP(uint8_t con_num, char *data) {
    // Calculate the total length
    uint8_t cmd[50];
    sprintf((char*)cmd, "AT+CIPSEND=%d,%d\r\n", con_num, strlen(data));
    HAL_UART_Transmit(AT_huart, cmd, strlen(cmd), 100);
    HAL_Delay(1); // Adjust this delay as needed
    HAL_UART_Transmit(AT_huart, (uint8_t *)data, strlen(data), 1000);
}

void ESP_UART_Init(void) {
    // Initialize default UART (example: UART1)
    AT_huart = &huart1; // Set default UART instance
    // UART initialization parameters
    AT_huart->Instance = USART1; // Replace USART1 with your specific USART instance
    AT_huart->Init.BaudRate = 115200; // Example baud rate, adjust as needed
    AT_huart->Init.WordLength = UART_WORDLENGTH_8B;
    AT_huart->Init.StopBits = UART_STOPBITS_1;
    AT_huart->Init.Parity = UART_PARITY_NONE;
    AT_huart->Init.Mode = UART_MODE_TX_RX;
    AT_huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
    AT_huart->Init.OverSampling = UART_OVERSAMPLING_16;

    if (HAL_UART_Init(AT_huart) != HAL_OK) {
        // Initialization error handling
        Error_Handler();
    }
}
