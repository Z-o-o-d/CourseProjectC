#ifndef AT_WIFI_H
#define AT_WIFI_H

#include "main.h"
#include "stm32f1xx_hal.h"
#include <string.h>
#include <stdarg.h>

// Define the structure for UART response
typedef struct {
    uint8_t raw_data[100]; // Buffer for received raw data
    uint8_t is_ok;         // Flag indicating if "\r\nOK\r\n" was received
    uint8_t retries;       // Number of retries attempted
    uint16_t length;       // Length of the received data
} UART_Response;

// Function prototype for sending command and receiving response
UART_Response ESP_SendCommand(UART_HandleTypeDef *huart, uint8_t *command, uint32_t timeout, uint8_t max_retries);

// Function prototype for clearing the RX buffer
void clearRxBuffer(UART_Response *response);

// Function prototype for sending data with multiple variables
UART_Response ESP_SendData(UART_HandleTypeDef *huart, uint32_t timeout, int num, ...);

#endif // AT_WIFI_H
