//正常操作
AT+RST\r\n
AT+CWMODE=2\r\n
AT+CIPAP="192.168.15.1"\r\n
AT+CWMODE=3\r\n
AT+CWSAP="HarmonyNextIOT","12345678",1,3\r\n
AT+CWJAP="8B109_IOT","DGUT8B109"\r\n
AT+CWJAP?\r\n
AT+CIFSR\r\n
AT+CIPMUX=1\r\n
AT+CIPSERVER=1,8888\r\n

AT+CIPSERVER=0\r\n
AT+CIPSERVER=1,8888\r\n
AT+CWLAP\r\n
AT+RESTORE\r\n


//正常操作

///断开全部连接
AT+CIPSERVER=0\r\n
AT+CIPSERVER=1,8888\r\n
///断开全部连接


格式为 DATA:xxx,xxx,xxx,xxx,...
例如，如果要发送数据 DATA:123,456,789,012, 到连接编号为0的客户端:

//发送数据
AT+CIPSEND=0,16\r\n
DATA:123,456,789,012
//发送数据


//恢复出厂设置
AT+RESTORE\r\n
//恢复出厂设置
uint8_t ESP_Server_Port[]="9999"
uint8_t	ESP_WiFi_SSID[]="8B109_IOT"
uint8_t	ESP_WiFi_PSWD[]="DGUT8B109"
uint8_t	ESP_AP_SSID[]="HarmonyNextIOT"
uint8_t	ESP_AP_PSWD[]="12345678"
uint8_t	ESP_AP_IP[]="192.168.15.1"
//这部分写死才这么弄
//

//列出全部wifi
AT+CWLAP 
//列出全部wifi

#include <stdint.h>

// 定义简谱和频率对应的字典，频率以整数表示（单位：Hz * 100）
const uint16_t note_freq[] = {
    /* C2      */ 65,
    /* C#2/Db2 */ 69,
    /* D2      */ 73,
    /* D#2/Eb2 */ 78,
    /* E2      */ 82,
    /* F2      */ 87,
    /* F#2/Gb2 */ 92,
    /* G2      */ 98,
    /* G#2/Ab2 */ 104,
    /* A2      */ 110,
    /* A#2/Bb2 */ 117,
    /* B2      */ 123,
    /* C3      */ 130,
    /* C#3/Db3 */ 138,
    /* D3      */ 146,
    /* D#3/Eb3 */ 155,
    /* E3      */ 164,
    /* F3      */ 174,
    /* F#3/Gb3 */ 185,
    /* G3      */ 196,
    /* G#3/Ab3 */ 208,
    /* A3      */ 220,
    /* A#3/Bb3 */ 233,
    /* B3      */ 246,
    /* C4      */ 261,
    /* C#4/Db4 */ 277,
    /* D4      */ 293,
    /* D#4/Eb4 */ 311,
    /* E4      */ 329,
    /* F4      */ 349,
    /* F#4/Gb4 */ 370,
    /* G4      */ 392,
    /* G#4/Ab4 */ 415,
    /* A4      */ 440,
    /* A#4/Bb4 */ 466,
    /* B4      */ 493,
    /* C5      */ 523,
    /* C#5/Db5 */ 554,
    /* D5      */ 587,
    /* D#5/Eb5 */ 622,
    /* E5      */ 659,
    /* F5      */ 698,
    /* F#5/Gb5 */ 740,
    /* G5      */ 784,
    /* G#5/Ab5 */ 831,
    /* A5      */ 880,
    /* A#5/Bb5 */ 932,
    /* B5      */ 987,
};

// 计算字典的长度
#define NOTE_FREQ_COUNT (sizeof(note_freq) / sizeof(note_freq[0]))

int main() {
    // 示例：访问字典中的第一个音符（C2）的频率
    uint16_t freq_C2 = note_freq[0]; // freq_C2 等于 65

    // 在此处可以进行其他操作或使用频率表

    return 0;
}