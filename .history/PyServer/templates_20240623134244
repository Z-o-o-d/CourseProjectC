<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>人物画像</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
    body {
        font-family: Arial, sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
        height: 10vh;
        margin: 0;
        background-color: #f4f4f9;
        position: relative;
    }
    .container {
        display: flex;
        width: 50%;
        max-width: 2000px;
        background: white;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 50px;
        margin-top: 10px;
        margin-bottom: 20px;
    }
    .chart-container {
        width: 50%;
        margin-right: 20px;
    }
    .chart-container:last-child {
        margin-right: 0;
        width: 50%;
    }
    canvas {
        width: 50%;
        margin-top: 20px;
    }
    h2 {
        font-size: 35px;
        text-align: center;
    }
    #top-image {
        width: 25%;
        height: auto;
        margin-bottom: 30px;
    }
    #progressBar {
    width: 10; /* Initially set width to 0 */
    transition: width 0.5s ease-in-out; /* Add transition for smooth animation */
    }
</style>

    <link rel="icon" href="{{ url_for('static', filename='logo.png') }}" type="image/png">
</head>
<body>
<div class="container">
    <div class="chart-container">
        <h2>年龄画像</h2>
        <h2>年龄: <span id="maxAgeValue"></span></h2>
        <canvas id="ageChart"></canvas>
    </div>
    <div class="chart-container">
        <h2>性别画像</h2>
        <h2>性别: <span id="maxGenderValue"></span></h2>
        <canvas id="genderChart"></canvas>
    </div>
</div>
<!--<h1>Feature ID</h1>-->
<p id="featureId">Feature ID: <span id="featureIdValue"></span></p>
<progress id="progressBar" value="0" max="100"></progress>
<p id="score">Score: <span id="scoreValue"></span></p>


    <img id="top-image" src="{{ url_for('static', filename='集创赛LOGO 全称 横版.png') }}" alt="集创赛LOGO">
<h1>人物画像原始结果：</h1>
    <pre id="data"></pre>

    <script>
        // Define global variables for chart instances
        let ageChartInstance = null;
        let genderChartInstance = null;

        function drawCharts(ageData, genderData) {
            const maxAge = ageData.child > ageData.middle && ageData.child > ageData.old ? '儿童' : ageData.middle > ageData.old ? '成人' : '老年人';
            const maxGender = genderData.female > genderData.male ? '女性' : '男性';

            const maxAgeElement = document.getElementById('maxAgeValue');
            const maxGenderElement = document.getElementById('maxGenderValue');

            maxAgeElement.innerText = maxAge;
            maxGenderElement.innerText = maxGender;

            const ageDataArray = [ageData.child, ageData.middle, ageData.old];
            const genderDataArray = [genderData.female, genderData.male];

            if (!ageChartInstance) {
                const ctxAge = document.getElementById('ageChart').getContext('2d');
                ageChartInstance = new Chart(ctxAge, {
                    type: 'pie',
                    data: {
                        labels: ['儿童', '成人', '老年人'],
                        datasets: [{
                            data: ageDataArray,
                            backgroundColor: ['#ff6384', '#36a2eb', '#ffce56'],
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            title: {
                                display: true,
                                text: 'Age Distribution'
                            }
                        },
                        animation: {
                            duration: 1000 // Set animation duration to 1000ms (1 second)
                        }
                    }
                });
            } else {
                ageChartInstance.data.datasets[0].data = ageDataArray;
                ageChartInstance.update();
            }

            if (!genderChartInstance) {
                const ctxGender = document.getElementById('genderChart').getContext('2d');
                genderChartInstance = new Chart(ctxGender, {
                    type: 'pie',
                    data: {
                        labels: ['女性', '男性'],
                        datasets: [{
                            data: genderDataArray,
                            backgroundColor: ['#ff6384', '#36a2eb'],
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'top',
                            },
                            title: {
                                display: true,
                                text: 'Gender Distribution'
                            }
                        },
                        animation: {
                            duration: 1000 // Set animation duration to 1000ms (1 second)
                        }
                    }
                });
            } else {
                genderChartInstance.data.datasets[0].data = genderDataArray;
                genderChartInstance.update();
            }
        }

        function getDataAndDrawCharts() {
            fetch('/get_data')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('data').innerText = JSON.stringify(data, null, 4);
                    drawCharts(data.data.result.age, data.data.result.gender);
                });
        }

        getDataAndDrawCharts();
        setInterval(getDataAndDrawCharts, 50);
    </script>

    <h1>声纹识别原始结果</h1>
    <pre id="data1"></pre>
<script>
    function getData() {
        $.ajax({
            url: "/get_data1",
            type: "GET",
            success: function(response){
                document.getElementById('data1').innerText = JSON.stringify(response, null, 4);
                const featureIdData = JSON.parse(response.payload.searchFeaRes.text).scoreList[0];
                const featureId = featureIdData.featureId;
                const score = featureIdData.score;
                document.getElementById('featureId').innerText = "Feature ID: " + featureId;

                // Displaying the score value
                document.getElementById('score').innerText = "Score: " + score;

                // Creating a progress bar based on the score value
                const progressBar = document.getElementById('progressBar');
                progressBar.value = score * 100; // Converting score to percentage
            },
            error: function(xhr, status, error){
                console.error(error);
            }
        });
    }

    // Initial data fetch
    getData();

    // Fetching data every 10 seconds
    setInterval(getData, 50); // 10 seconds
</script>



</body>
</html>